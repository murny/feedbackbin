# SQLite. Versions 3.8.0 and up are supported.
#   gem install sqlite3
#
#   Ensure the SQLite 3 gem is defined in your Gemfile
#   gem "sqlite3"
#
default: &default
  adapter: sqlite3
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 10 } %>
  timeout: 5000

primary: &primary
  <<: *default
  database: storage/<%= Rails.env %>/%{tenant}/main.sqlite3
  migrations_paths: db/tenanted_migrate
  tenanted: true

shared: &shared
  <<: *default
  database: storage/<%= Rails.env %>_shared.sqlite3
  migrations_paths: db/shared_migrate

cache: &cache
  <<: *default
  database: storage/<%= Rails.env %>_cache.sqlite3
  migrations_paths: db/cache_migrate

queue: &queue
  <<: *default
  database: storage/<%= Rails.env %>_queue.sqlite3
  migrations_paths: db/queue_migrate

cable: &cable
  <<: *default
  database: storage/<%= Rails.env %>_cable.sqlite3
  migrations_paths: db/cable_migrate

development:
  primary: *primary  # Primary connection becomes tenant-scoped
  shared: *shared   # New shared connection
  cable: *cable
  cache: *cache
  queue: *queue

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  primary: *primary
  shared: *shared
  cable: *cable
  cache: *cache
  queue: *queue

# Store production database in the storage/ directory, which by default
# is mounted as a persistent Docker volume in config/deploy.yml.
production:
  primary: *primary
  shared: *shared
  cable: *cable
  cache: *cache
  queue: *queue
